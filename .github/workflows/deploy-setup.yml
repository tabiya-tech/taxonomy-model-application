name: Deploy Set-Up Infrastracture

on:
  workflow_call:
    inputs:
      target-environment:
        required: true
        type: string
    outputs:
      base-domain-name:
        description: "The base domain name / tabiya domain name"
        value: ${{ jobs.hosted-zone.outputs.baseDomainName }}
      target-domain-name:
        value: ${{ jobs.hosted-zone.outputs.targetDomainName }}
      frontend-url:
        description: "The frontend url in the target environment"
        value: ${{ jobs.hosted-zone.outputs.frontendURL }}
      backend-url:
        description: "The backend url in the target environment, including the base path /api"
        value: ${{ jobs.hosted-zone.outputs.backendUrl }}
      auth-url:
        description: "The mapped base url for auth service in the target environment"
        value: ${{ jobs.hosted-zone.outputs.authUrl }}
      locales-url:
        description: "The locales url in the target environment"
        value: ${{ jobs.hosted-zone.outputs.localesUrl }}

env:
  baseDomainName: tabiya.tech

jobs:
  hosted-zone:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target-environment }}
    outputs:
        baseDomainName: ${{ steps.pulumi.outputs.baseDomainName }}
        targetDomainName: ${{ steps.pulumi.outputs.targetDomainName }}
        frontendURL: ${{ steps.pulumi.outputs.frontendURL }}
        backendUrl: ${{ steps.pulumi.outputs.backendUrl }}
        authUrl: ${{ steps.pulumi.outputs.authUrl }}
        localesUrl: ${{ steps.pulumi.outputs.localesUrl }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'
          cache-dependency-path: iac/yarn.lock
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: iac/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('iac/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-iac-node-modules
      - name: Install dependencies
        run: yarn install
        working-directory: iac
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-duration-seconds: 1200
          role-session-name: MySessionName
      - name: Deploy Set up Infrastructure and Hosted Zone
        id: pulumi
        uses: pulumi/actions@v5
        with:
          work-dir: iac/setup
          command: up
          stack-name: tabiya-tech/taxonomy-model-application-setup/${{ inputs.target-environment }}
        env:
          BASE_DOMAIN_NAME: ${{ env.baseDomainName }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

  validate-versions:
    runs-on: ubuntu-latest
    needs: hosted-zone
    if: ${{ inputs.target-environment != 'dev' }}
    environment: ${{ inputs.target-environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get install jq
      - name: Compare New and Current Version
        run: |
          ./pipeline/compareVersions.sh $GITHUB_REF_NAME ${{ needs.hosted-zone.outputs.frontendURL }}/data/version.json

  name-servers:
    runs-on: ubuntu-latest
    needs: hosted-zone
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'
          cache-dependency-path: iac/yarn.lock
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: iac/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('iac/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-iac-node-modules
      - name: Install dependencies
        run: yarn install
        working-directory: iac
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_DNS_UPDATE_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DNS_UPDATE_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-duration-seconds: 1200
          role-session-name: MySessionName
      - name: Update Record on Parent Domain
        id: pulumi
        uses: pulumi/actions@v5
        with:
          work-dir: iac/name-servers
          command: up
          stack-name: tabiya-tech/taxonomy-model-application-nameserver/${{ inputs.target-environment }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          BASE_DOMAIN_NAME: ${{ env.baseDomainName }}

  certificate:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target-environment }}
    needs:
      - name-servers
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'
          cache-dependency-path: iac/yarn.lock
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: iac/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('iac/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-iac-node-modules
      - name: Install dependencies
        run: yarn install
        working-directory: iac
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-duration-seconds: 1200
          role-session-name: MySessionName
      - name: Set up certificate on the base domain
        id: pulumi
        uses: pulumi/actions@v5
        with:
          work-dir: iac/certificate
          command: up
          stack-name: tabiya-tech/taxonomy-model-application-certificate/${{ inputs.target-environment }}
        env:
          BASE_DOMAIN_NAME: ${{ env.baseDomainName }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
